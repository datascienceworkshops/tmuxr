on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: "R-${{ matrix.config.r }}-tmux-${{ matrix.config.tmux }}-${{ matrix.config.os }}"

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macOS-latest, r: "devel", tmux: "3.1c"}
          - {os: macOS-latest, r: "release", tmux: "3.1c"}
          - {os: ubuntu-16.04, r: "release", rspm: "https://packagemanager.rstudio.com/cran/__linux__/xenial/latest", tmux: "3.1c"}
          - {os: ubuntu-16.04, r: "3.6", rspm: "https://packagemanager.rstudio.com/cran/__linux__/xenial/latest", tmux: "3.1c"}
          - {os: ubuntu-16.04, r: "3.5", rspm: "https://packagemanager.rstudio.com/cran/__linux__/xenial/latest", tmux: "3.1c"}
          - {os: ubuntu-16.04, r: "3.4", rspm: "https://packagemanager.rstudio.com/cran/__linux__/xenial/latest", tmux: "3.1c"}
          - {os: ubuntu-16.04, r: "3.3", rspm: "https://packagemanager.rstudio.com/cran/__linux__/xenial/latest", tmux: "3.1c"}
          - {os: ubuntu-16.04, r: "release", rspm: "https://packagemanager.rstudio.com/cran/__linux__/xenial/latest", tmux: "3.1a"}
          - {os: ubuntu-16.04, r: "release", rspm: "https://packagemanager.rstudio.com/cran/__linux__/xenial/latest", tmux: "3.1"}
          - {os: ubuntu-16.04, r: "release", rspm: "https://packagemanager.rstudio.com/cran/__linux__/xenial/latest", tmux: "3.0a"}
          - {os: ubuntu-16.04, r: "release", rspm: "https://packagemanager.rstudio.com/cran/__linux__/xenial/latest", tmux: "3.0"}
          - {os: ubuntu-16.04, r: "release", rspm: "https://packagemanager.rstudio.com/cran/__linux__/xenial/latest", tmux: "2.9a"}
          - {os: ubuntu-16.04, r: "release", rspm: "https://packagemanager.rstudio.com/cran/__linux__/xenial/latest", tmux: "2.9"}
          - {os: ubuntu-16.04, r: "release", rspm: "https://packagemanager.rstudio.com/cran/__linux__/xenial/latest", tmux: "2.8"}
          - {os: ubuntu-16.04, r: "release", rspm: "https://packagemanager.rstudio.com/cran/__linux__/xenial/latest", tmux: "2.7"}
          - {os: ubuntu-16.04, r: "release", rspm: "https://packagemanager.rstudio.com/cran/__linux__/xenial/latest", tmux: "2.6"}
          - {os: ubuntu-16.04, r: "release", rspm: "https://packagemanager.rstudio.com/cran/__linux__/xenial/latest", tmux: "2.5"}
          - {os: ubuntu-16.04, r: "release", rspm: "https://packagemanager.rstudio.com/cran/__linux__/xenial/latest", tmux: "2.4"}
          - {os: ubuntu-16.04, r: "release", rspm: "https://packagemanager.rstudio.com/cran/__linux__/xenial/latest", tmux: "2.3"}
          - {os: ubuntu-16.04, r: "release", rspm: "https://packagemanager.rstudio.com/cran/__linux__/xenial/latest", tmux: "2.2"}
          - {os: ubuntu-16.04, r: "release", rspm: "https://packagemanager.rstudio.com/cran/__linux__/xenial/latest", tmux: "2.1"}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      TMUX_VERSION: ${{ matrix.config.tmux }}

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@master

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
        shell: Rscript {0}

      - name: Cache R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ matrix.config.r }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-r-${{ matrix.config.r }}-1-

      - name: Install Linux dependencies
        if: runner.os == 'Linux'
        env:
          RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
        run: |
          Rscript -e "remotes::install_github('r-hub/sysreqs')"
          sysreqs=$(Rscript -e "cat(sysreqs::sysreq_commands('DESCRIPTION'))")
          sudo -s eval "$sysreqs"

      - name: Install tmux on Linux
        if: runner.os == 'Linux'
        run: |
          echo "Installing tmux ${TMUX_VERSION}..."
          sudo apt-get install -y libevent-dev ncurses-dev
          cd /tmp
          wget https://github.com/tmux/tmux/releases/download/${TMUX_VERSION}/tmux-${TMUX_VERSION}.tar.gz
          tar -xzf tmux-${TMUX_VERSION}.tar.gz
          cd tmux-${TMUX_VERSION}
          ./configure
          make
          sudo make install
          echo "Successfully installed tmux ${TMUX_VERSION}"

      - name: Install tmux on macOS
        if: runner.os == 'macOS'
        run: |
          brew install tmux

      - name: Install package dependencies
        run: |
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("rcmdcheck")
        shell: Rscript {0}

      - name: Session info
        run: |
          options(width = 100)
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
        shell: Rscript {0}

      - name: Check
        env:
          _R_CHECK_CRAN_INCOMING_: false
        run: rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "warning", check_dir = "check")
        shell: Rscript {0}

      - name: Show testthat output
        if: always()
        run: find check -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-tmux${{ matrix.config.tmux }}-results
          path: check

      - name: Test coverage
        if: matrix.config.os == 'macOS-latest' && matrix.config.r == '4.0'
        run: covr::codecov()
        shell: Rscript {0}
